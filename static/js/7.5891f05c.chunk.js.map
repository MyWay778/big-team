{"version":3,"sources":["components/MainContent/LoginContent/LoginContainer.module.css","components/MainContent/LoginContent/LoginCard/LoginCard.module.css","components/MainContent/LoginContent/LoginCard/SignInForm/SignInForm.module.css","components/MainContent/LoginContent/LoginCard/SignInForm/SignInForm.js","components/MainContent/LoginContent/LoginCard/LoginCard.js","components/MainContent/LoginContent/LoginContainer.js"],"names":["module","exports","validation","values","errors","email","test","length","password","SignInForm","props","initialValues","rememberMe","onSubmit","a","setSubmitting","setStatus","setErrors","signInHandler","validate","touched","status","handleChange","handleSubmit","handleBlur","isSubmitting","isValidating","backendMessageCode","className","classes","form","name","field","fieldError","fieldIsValidating","type","placeholder","onChange","onBlur","value","error","submit","disabled","LoginCard","loginCard","HeaderFour","text","LoginContent","this","resetBackendMessageCode","isAuth","to","loginContent","signIn","React","Component","connect","state","authReducer"],"mappings":"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","file":"static/js/7.5891f05c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"LoginContainer_loginContent__1ThKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginCard\":\"LoginCard_loginCard__2G54i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignInForm_form__2vx00\",\"field\":\"SignInForm_field__2myGv\",\"fieldError\":\"SignInForm_fieldError__ViUyy\",\"fieldIsValidating\":\"SignInForm_fieldIsValidating__2yjoI\",\"error\":\"SignInForm_error__2U7dP\",\"submit\":\"SignInForm_submit__3ziqv btn_submit\",\"status\":\"SignInForm_status__3GErP\"};","import React, {useEffect} from 'react'\n\nimport classes from \"./SignInForm.module.css\"\nimport {Field, Formik} from \"formik\";\n\nconst validation = (values) => {\n    const errors = {}\n    if (!values.email) {\n        errors.email = 'введите email'\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n        errors.email = 'введен не корректный email'\n    } else if (values.email.length > 64) {\n        errors.email = 'недопустимая длина'\n    }\n\n    if (!values.password) {\n        errors.password = 'введите пароль'\n    } else if (values.password.length > 20) {\n        errors.password = 'максимальная длина 20 символов'\n    }\n    return errors\n}\n\nconst SignInForm = props => {\n    return (\n        <div>\n            <Formik initialValues={{email: '', password: '', rememberMe: false}}\n                    onSubmit={async (values, {setSubmitting, setStatus, setErrors}) => {\n                        props.signInHandler(values)\n                        setSubmitting(false)\n                    }}\n                    validate={validation}\n            >\n                {({\n                      values, errors,\n                      touched,\n                      status,\n                      handleChange,\n                      handleSubmit,\n                      handleBlur,\n                      isSubmitting,\n                      isValidating,\n                      setStatus,\n                    setErrors\n                  }) => {\n                    if (props.backendMessageCode === 1) {\n                        if (status !== \"Неверный логин и пароль\" || !errors.email) {\n                            setStatus(\"Неверный логин и пароль\")\n                            setErrors({email: true, password: true})\n                        }\n\n                    }\n                    if(props.backendMessageCode === 10 && status!== \"Введите код с картинки\") {\n                        setStatus(\"Введите код с картинки\")\n                        setErrors({})\n                    }\n                    return  <form className={classes.form} name=\"signIn\" onSubmit={handleSubmit}>\n                        {<div className={classes.status}>{status}</div>}\n                        <Field\n                            className={`\n                                ${classes.field} \n                                ${errors.email && touched.email ? classes.fieldError : ''}\n                                ${!errors.email && touched.email ? classes.fieldIsValidating : ''}\n                            `}\n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                        <div className={classes.error}>{errors.email && touched.email && errors.email}</div>\n                        <Field\n                            className={`\n                                ${classes.field} \n                                ${errors.password && touched.password ? classes.fieldError : ''}\n                                ${!errors.password && touched.password ? classes.fieldIsValidating : ''}\n                            `}\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Пароль\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                        />\n                        <div className={classes.error}>{errors.password && touched.password && errors.password}</div>\n                        <div className={classes.field}><label><Field type=\"checkbox\"\n                                                                     name=\"rememberMe\"/> Запомнить</label></div>\n                        <input className={classes.submit} type=\"submit\" value=\"Войти\" disabled={isSubmitting}/>\n                    </form>\n                    }\n                }\n            </Formik>\n        </div>\n    )\n}\n\nexport default SignInForm","import React from 'react'\n\nimport classes from \"./LoginCard.module.css\"\n\nimport SignInForm from \"./SignInForm/SignInForm\";\nimport HeaderFour from \"../../ContentProfile/UserCard/MainInfo/TextBlock/HeaderFour/HeaderFour\";\n\nconst LoginCard = props => {\n    return (\n        <section className={classes.loginCard}>\n            <HeaderFour text=\"Вход\" />\n            <SignInForm\n                signInHandler={props.signInHandler}\n                backendMessageCode={props.backendMessageCode}\n            />\n        </section>\n    )\n}\n\nexport default LoginCard","import React from 'react'\nimport classes from \"./LoginContainer.module.css\"\nimport LoginCard from \"./LoginCard/LoginCard\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\"\nimport {resetBackendMessageCode, signIn} from \"../../../redux/authReducer\";\n\nclass LoginContent extends React.Component {\n    componentWillUnmount() {\n        this.props.resetBackendMessageCode()\n    }\n\n    render() {\n        if (this.props.isAuth) {\n            return <Redirect to=\"/profile\"/>\n        }\n        return (\n            <div className={classes.loginContent}>\n                <LoginCard signInHandler={this.props.signIn}\n                           backendMessageCode={this.props.backendMessageCode}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.authReducer.isAuth,\n        backendMessageCode: state.authReducer.backendMessageCode,\n    }\n}\n\nexport default connect(mapStateToProps, {signIn, resetBackendMessageCode})(LoginContent)"],"sourceRoot":""}